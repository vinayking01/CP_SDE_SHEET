class MyStack {
public:
    
    queue<int> q;
    
    void push(int x) {
        
        // Push current element in queue.
        q.push(x);
        
        // Remove all elements from queue except the one inserted currently,
        // hence running loop till N-1
        
        
        int N= q.size()-1;
        for(int i =0;i<N;i++)
        {
            int temp = q.front();
            q.pop();
            q.push(temp);
            
        }
        
        
        // Add all these elements again in the back of the queue.
        // In this way, the top of stack or latest element pushed is always on front of queue
       
    }
    
    int pop() {
        // This is simple logic
        int temp = q.front();
        q.pop();

        return temp;
       
    }
    
    int top() {
    return  q.front();  
    }
    
    bool empty() {
        
        
       return q.empty();
    }
};