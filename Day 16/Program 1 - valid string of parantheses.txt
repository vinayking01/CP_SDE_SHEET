class Solution {
public:
    stack<int> p;
     // to keep track of the edge case when only one bracket is given or left whether it is open or close 
    int open_bracket =0;   
    int close_bracket =0;
    bool isValid(string s) {
      for(int i=0;s[i]!='\0';i++)
      {     
          char el = s[i];
          if(el=='(' || el=='{' || el=='[')
          {
          p.push(el);
          open_bracket ++;
          }
          else
          {   if(!p.empty())
            {
               char np = p.top();
              p.pop();
              if(s[i]=='}' && np!= '{')
              {
                return false;
              }
              else if(s[i]==')' && np!='(' )
              {
                return false;
              }
              else if(s[i]==']' && np!='[' )
              {
                return false;
              }
            }
           close_bracket++;
             
          }  
      }
        if(!p.empty() || (open_bracket!=close_bracket))    // p.empty() is for if still the array is filled 
            {
                return false;  
            }
     return true;   
    }
};