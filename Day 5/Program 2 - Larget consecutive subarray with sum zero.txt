
// IN geeks for geeks
using namespace std;

class Solution{
    public:
    int maxLen(vector<int>&A, int n)
    {   
        unordered_map<int,int> presum;    // O(1) for all operations
        int sum =0;
        int max_len = 0;
        
        
        for(int i = 0;i<A.size();i++)
        {
            sum+=A[i];
            if(sum==0)
            {
                max_len = i+1;       // for if element is itself is zero
            }
            else
            {
                if(presum.find(sum)!=presum.end())     // If this sum is seen before, then update max_len
                {
                    max_len = max(max_len,i - presum[sum]);
                }
                else
                {
                    presum[sum] = i;          // Else insert this sum with index in hash table
                }
            }
        }
        return max_len;
    }
};


// { Driver Code Starts.

int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        int m;
        cin>>m;
        vector<int> array1(m);
        for (int i = 0; i < m; ++i){
            cin>>array1[i];
        }
        Solution ob;
        cout<<ob.maxLen(array1,m)<<endl;
    }
    return 0; 
}


  // } Driver Code Ends