#include<bits/stdc++.h>
class MinStack {
    stack<long long> st;
    long long mini;
public:
    MinStack() {
        mini = INT_MAX;
    }
    
    void push(int value) {
        long long val = (long long)value;
       if(st.empty())
       {
           st.push(val);
           mini = val;
       }
       else
       {
           if(val>mini)
           {
               st.push(val);
           }
           else
           {
               long long ele = 2*val*1LL - mini;
               st.push(ele);
               mini = val;
           }
       }
       
    }
    
    void pop() {
        if(st.empty())
        {
            return;
        }
        long long val = st.top();
        st.pop();
        if(val<mini)
        {   
            mini = 2*mini*1LL - val;    
        }
        
    }
    
    int top() {
        if(st.empty())
        {
            return -1;
        }
        if(st.top()<mini)
        {
            return mini;
        }
        return st.top();
    }
    
    int getMin() {
     return mini;   
    }
};

/**
 * Your MinStack object will be instantiated and called as such:
 * MinStack* obj = new MinStack();
 * obj->push(val);
 * obj->pop();
 * int param_3 = obj->top();
 * int param_4 = obj->getMin();
 */