class Solution {
public:
    int largestRectangleArea(vector<int>& height) {
        vector<int>left_smallest(height.size());
        vector<int>right_smallest(height.size());
        
        stack<int>st;
        
        for(int i=0;i<height.size();i++)
        {
            while(!st.empty() && height[st.top()]>=height[i])
            {
                st.pop();
            }
            
            if(st.empty())
            {
                left_smallest[i]=0;
            }
            else
            {
                left_smallest[i] = st.top()+1;
            }
            st.push(i);
        }
        
        while(!st.empty())
        {
            st.pop();
        }
        
        int n = height.size();
        for(int i =n-1;i>=0;i--)
        {
            while(!st.empty() && height[st.top()]>=height[i])
            {
                st.pop();
            }
            
            if(st.empty())
            {
                right_smallest[i]=n-1;
            }
            else
            {
                right_smallest[i] = st.top()-1;
            }
            st.push(i);
        }
        
        int maxA=0;
        
        for(int i =0;i<n;i++)
        {
            maxA = max(maxA,height[i]*(right_smallest[i]-left_smallest[i]+1));
        }
        return maxA;
        
    }
};